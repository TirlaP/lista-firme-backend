generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int       @id @default(autoincrement())
  name            String    @db.VarChar(255)
  email           String    @unique @db.VarChar(255)
  password        String    @db.VarChar(255)
  role            String?   @default("user") @db.VarChar(50)
  isEmailVerified Boolean?  @default(false) @map("is_email_verified")
  createdAt       DateTime? @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt       DateTime? @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)
  Token           Token[]

  @@index([email])
  @@map("users")
}

model Company {
  id               Int       @id @default(autoincrement())
  cui              Int       @unique
  denumire         String
  codInmatriculare String?   @map("cod_inmatriculare")
  stareFirma       String?   @map("stare_firma")
  codCaen          String?   @map("cod_caen")
  eFactura         Boolean?  @default(false) @map("e_factura")
  platitorTva      Boolean?  @default(false) @map("platitor_tva")
  tvaIncasare      Boolean?  @default(false) @map("tva_incasare")
  lastUpdated      DateTime? @map("last_updated") @db.Timestamp(6)
  adresaCompleta   String?   @map("adresa_completa")
  adresaTara       String?   @map("adresa_tara")
  adresaLocalitate String?   @map("adresa_localitate")
  adresaJudet      String?   @map("adresa_judet")
  adresaStrada     String?   @map("adresa_strada")
  adresaNumar      String?   @map("adresa_numar")
  adresaBloc       String?   @map("adresa_bloc")
  adresaScara      String?   @map("adresa_scara")
  adresaEtaj       String?   @map("adresa_etaj")
  adresaApartament String?   @map("adresa_apartament")
  adresaCodPostal  String?   @map("adresa_cod_postal")
  adresaSector     String?   @map("adresa_sector")
  adresaAnaf       Json?     @default("{}") @map("adresa_anaf")
  dateGenerale     Json?     @default("{}") @map("date_generale")
  splitTva         Json?     @default("{}") @map("split_tva")
  stareInactiv     Json?     @default("{}") @map("stare_inactiv")

  @@index([cui], type: Hash)
  @@index([denumire], type: Hash)
  @@index([codCaen])
  @@index([stareFirma])
  @@index([adresaJudet, adresaLocalitate])
  @@index([adresaLocalitate])
  @@index([lastUpdated])
  @@map("companies")
}

model CaenCode {
  id           Int    @id @default(autoincrement())
  code         String @unique @db.VarChar(10)
  name         String
  divisionCode String @map("division_code") @db.VarChar(10)
  divisionName String @map("division_name")
  sectionCode  String @map("section_code") @db.VarChar(5)
  sectionName  String @map("section_name")

  @@index([code], type: Hash)
  @@index([divisionCode])
  @@index([sectionCode])
  @@map("caen_codes")
}

model Token {
  id          Int       @id @default(autoincrement())
  token       String
  type        String    @db.VarChar(100)
  expires     DateTime  @db.Timestamp(6)
  blacklisted Boolean?  @default(false)
  createdAt   DateTime? @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt   DateTime? @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)
  userId      Int       @map("user_id")
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_user")

  @@index([token], type: Hash)
  @@index([type])
  @@index([userId])
  @@index([expires])
  @@map("tokens")
}
